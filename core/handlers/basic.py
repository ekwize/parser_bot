from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command

from core.keyboards.inline import stores_kb
from core.keyboards.reply import start_kb

from core.states import ClientState

router = Router()

#start handler
@router.message(Command(commands=['start']))
async def start(message: Message, state: FSMContext):
    START_TEXT = """

–Ø <b>–ø–∞—Ä—Å–µ—Ä</b>
–ú–æ–≥—É —Å–ø–∞—Ä—Å–∏—Ç—å –ª—é–±–æ–π —Ç–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —É–∫–∞–∂–µ—à—åüòè

–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É <b>–ü–æ–º–æ—â—å</b> 
–∏ —É–∑–Ω–∞—Ç—å –∫–∞–∫ –º–Ω–æ—é –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è

    """
    keyboard = start_kb()

    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>!' + START_TEXT,
                        reply_markup=keyboard)
    
    await state.set_state(ClientState.START_ORDER)

#parse handler
@router.message(F.text.lower() == "–ø–∞—Ä—Å–∏–Ω–≥ –º–∞–≥–∞–∑–∏–Ω–∞")
async def parse_store(message: Message, state: FSMContext):
    keyboard = stores_kb()
    await message.answer('–í—ã–±–µ—Ä–∏ —Å–∞–π—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞', 
                        reply_markup=keyboard)
    await state.set_state(ClientState.PARSE_SELECTED)

#help handler
@router.message(F.text.lower() == "–ø–æ–º–æ—â—å")
async def help(message: Message, state: FSMContext):
    HELP_TEXT = """

    <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:</b>
    1)–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É <b>/start</b>
    2)–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–∞—Ä—Å–∏–Ω–≥ –º–∞–≥–∞–∑–∏–Ω–∞"
    3)–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
    4)–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞

    """
    await state.set_state(ClientState.HELP_SELECTED)
    await message.answer(HELP_TEXT)
    







